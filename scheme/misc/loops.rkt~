#lang racket

;; Define, then use:
(define (loop n)
  (if (zero? n)
      (displayln 'done)
      (begin
        (displayln n)
        (loop (- n 1)))))

(loop 5)

;; Define and use in a single expression:
(let loop ((n 5))
  (if (zero? n)
      (displayln 'done)
      (begin
        (displayln n)
        (loop (- n 1)))))

;; Or a do loop
(do ((n 5 (- n 1)))
  ((zero? n) (displayln 'done))
  (displayln n))

;; Or a for loop
(for ((n (in-range 5 0 -1)))
  (displayln n))
(displayln 'done)